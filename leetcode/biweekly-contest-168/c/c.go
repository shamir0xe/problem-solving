package main

import (
	"fmt"
)

/**
 * problem C (3/4)
 * leetcode, biweekly-contest-168
 * author: @shamir0xe
 * generated by contest-builder
 * https://github.com/shamir0xe/contest-builder
 **/

func minOperations(nums1 []int, nums2 []int) int64 {
	var res int64 = 0
	n := len(nums1)
	t := nums2[n]

	interval := func(a, b int) (int, int) {
		if a < b {
			return a, b
		}
		return b, a
	}

	abs := func(val int) int {
		if val < 0 {
			return -val
		}
		return val
	}
	ok := false
	lower := -1
	upper := int(1e9)
	for i := range n {
		x, y := interval(nums1[i], nums2[i])
		if x <= t && t <= y {
			ok = true
		} else {
			if t > y {
				lower = max(lower, y)
			} else {
				upper = min(upper, x)
			}
		}
		res += int64(abs(nums1[i] - nums2[i]))
	}

	if !ok {
		if lower == -1 {
			res += int64(upper - t)
		} else if upper == int(1e9) {
			res += int64(t - lower)
		} else {
			res += int64(min(upper-t, t-lower))
		}
	}
	res++

	return res
}

func main() {
	fmt.Println("Hello world!")
}
