#include <bits/stdc++.h>
using namespace std;

/**
 * problem C (3/7)
 * codeforces, educational-codeforces-round-156-rated-for-div2
 * author: @shamir0xe
 * generated by contest-builder
 * https://github.com/shamir0xe/contest-builder
 **/

typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<long long> vl;
typedef vector<vector<int>> vvi;
typedef vector<vector<ll>> vvl;
#define trace(x) cerr << #x << " : " << x << endl
#define _ << " " <<
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define X first
#define Y second

/**
 * printing tuples
 **/
template <size_t n, typename... T>
typename enable_if<(n >= sizeof...(T))>::type
__tuple_printer(ostream &os, const tuple<T...> &tup){};

template <size_t n, typename... T>
typename enable_if<(n < sizeof...(T))>::type
__tuple_printer(ostream &os, const tuple<T...> &tup) {
    if (n != 0)
        os << " ";
    os << get<n>(tup);
    __tuple_printer<n + 1>(os, tup);
};

template <typename... T>
std::ostream &operator<<(std::ostream &os, const std::tuple<T...> &tup) {
    os << "(";
    __tuple_printer<0>(os, tup);
    os << ")";
    return os;
}

/**
 * printing pairs
 **/
template <typename T, typename K>
ostream &operator<<(std::ostream &os, const std::pair<T, K> &p) {
    os << "(" << p.first << " " << p.second << ")";
    return os;
}

/**
 * printing vectors
 **/
template <class T>
std::ostream &operator<<(std::ostream &os, const std::vector<T> &v) {
    os << "[";
    bool first = true;
    for (auto ii = v.begin(); ii != v.end(); ++ii) {
        if (first)
            first = false;
        else
            os << " ";
        os << (*ii);
    }
    os << "]";
    return os;
}

/**
 * range functions
 **/
inline vi range(int idx, int n) {
    if (n <= idx)
        return vi();
    vi indices(n - idx);
    for (int i = idx; i < n; ++i)
        indices[i - idx] = i;
    return indices;
}

inline vi range(int n) { return range(0, n); }

// define variables here
#define MAX_M 15
ll pos;
string str;
int n;

// define functions here

int read_input() {
    cin >> str >> pos;
    return 0;
}

int find_t() {
    int l = 0;
    int e = sz(str);
    while (e - l > 1) {
        int m = (e + l) >> 1;
        ll temp = 1LL * (n + n - m + 1) * (m) / 2 + 1;
        // trace(m _ temp _ pos);
        if (temp > pos)
            e = m;
        else
            l = m;
    }
    return l;
}

auto solve() {
    /**
     * main logic goes here
     **/
    n = sz(str);
    int t = find_t();
    pos -= 1LL * (n + n - (t - 1)) * (t) / 2;
    pos--;
    // trace(t _ pos);
    vi indices(n);
    int cnt = 1;
    deque<pair<char, int>> stack;
    int i = 0;
    while (i < n) {
        stack.push_front({str[i], i});
        while (i + 1 < n && stack.front().X <= str[i + 1]) {
            i++;
            stack.push_front({str[i], i});
        }
        while (i + 1 < n && !stack.empty() && stack.front().X > str[i + 1]) {
            auto [ch, index] = stack.front();
            stack.pop_front();
            indices[index] = cnt++;
        }
        i++;
    }
    while (!stack.empty()) {
        auto [ch, index] = stack.front();
        stack.pop_front();
        indices[index] = cnt++;
    }
    // trace(indices);
    i = 0;
    while (i < n) {
        while (indices[i] <= t)
            i++;
        if (pos == 0)
            return str[i];
        pos--;
        i++;
    }
    return '?';
}

int second_main() {
    read_input();
    auto ans = solve();
    cout << ans;
    return 0;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    bool test_case = true;
    if (test_case) {
        int t;
        cin >> t;
        while (t--) {
            second_main();
        }
    } else {
        second_main();
    }
    cout << endl;
    return 0;
}
